'use client'

import { useState } from 'react'
import { config, getSiteUrl } from '@/lib/config'

interface OracleReadingProps {
  card: {
    id: number
    title: string
    name: string
    description: string
    image: string
  }
  personalizedMessage: string
  onShare?: () => void
  onUnlock?: () => void
}

export default function OracleReading({ 
  card, 
  personalizedMessage, 
  onShare, 
  onUnlock 
}: OracleReadingProps) {
  const [isSharing, setIsSharing] = useState(false)
  const [isUnlocking, setIsUnlocking] = useState(false)

  const handleShare = async () => {
    setIsSharing(true)
    
    try {
      const shareText = `ðŸ”® Just got my 3I/Atlas Oracle reading: "${card.title} - ${card.name}"\n\n"${personalizedMessage}"\n\nGet your cosmic reading at ${getSiteUrl('#oracle')} âœ¨`
      
      if (navigator.share) {
        await navigator.share({
          title: '3I/Atlas Oracle Reading',
          text: shareText,
          url: getSiteUrl('#oracle'),
        })
      } else {
        // Fallback for browsers that don't support Web Share API
        await navigator.clipboard.writeText(shareText)
        alert('Reading copied to clipboard!')
      }
    } catch (error) {
      console.error('Error sharing:', error)
    } finally {
      setIsSharing(false)
      onShare?.()
    }
  }

  const handleUnlock = () => {
    setIsUnlocking(true)
    
    setTimeout(() => {
      setIsUnlocking(false)
      onUnlock?.()
      window.open(config.external.mysticArcanaSignup, '_blank')
    }, 1000)
  }

  return (
    <div className="bg-gradient-to-br from-purple-900/30 to-indigo-900/30 rounded-xl p-6 max-w-md mx-auto">
      <div className="text-center mb-6">
        <div className="text-sm text-purple-300 mb-2">âœ¨ Generated by 3I/Atlas Oracle - {getSiteUrl()}</div>
        <h3 className="text-2xl font-bold text-white mb-2">{card.title}</h3>
        <p className="text-lg text-purple-200">{card.name}</p>
      </div>
      
      <div className="flex justify-center mb-6">
        <div className="w-32 h-32 rounded-full bg-gradient-to-br from-purple-700 to-indigo-700 flex items-center justify-center">
          <img 
            src={card.image} 
            alt={card.title} 
            className="w-24 h-24 rounded-full object-cover"
          />
        </div>
      </div>
      
      <div className="bg-purple-900/20 rounded-lg p-4 mb-6">
        <p className="text-gray-200 leading-relaxed">{personalizedMessage}</p>
      </div>
      
      <div className="flex flex-col gap-3">
        <button
          onClick={handleShare}
          disabled={isSharing}
          className="bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white font-medium py-2 px-4 rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed"
        >
          {isSharing ? 'Sharing...' : 'Share Reading'}
        </button>
        
        <button
          onClick={handleUnlock}
          disabled={isUnlocking}
          className="bg-gradient-to-r from-pink-600 to-purple-600 hover:from-pink-700 hover:to-purple-700 text-white font-medium py-2 px-4 rounded-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed"
        >
          {isUnlocking ? 'Unlocking...' : 'Unlock Full Reading'}
        </button>
      </div>
    </div>
  )
}
